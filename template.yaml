AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM template for the Vokab App

Resources:
#  ApiCognitoAuthorizer:
#    Type: AWS::ApiGateway::Authorizer
#    Properties:
#      IdentitySource: 'method.request.header.Authorization'
#      Name: VokabCognitoAuthorizer
#      ProviderARNs:
#        - 'arn:aws:cognito-idp:us-east-1:001507046168:userpool/us-east-1_5sIZNkSeN'
#      RestApiId: !Ref ServerlessRestApi
#      Type: COGNITO_USER_POOLS


  VokabApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors: "'*'"
      Auth:
        DefaultAuthorizer: VokabCognitoAuthorizer
        Authorizers:
          VokabCognitoAuthorizer:
            UserPoolArn: 'arn:aws:cognito-idp:us-east-1:001507046168:userpool/us-east-1_5sIZNkSeN'
            Identity: # OPTIONAL
              Header: Authorization # OPTIONAL; Default: 'Authorization'   <- required for your set-up for authorizer->


  VokabFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Timeout: 180
      MemorySize: 256 #in MB
      CodeUri: vokab-function
      Handler: com.kaleido.vokab.VokabHandler::handleRequest
      Runtime: java8
      Policies:
        -
          DynamoDBCrudPolicy:
            TableName: vokab-alias
        -
          DynamoDBCrudPolicy:
            TableName: vokab-concept

      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          COGNITO_USER_POOL_CLIENT_ID: "3f9o14ggjuj514562mqg2qmhvt" #currently the test DEA client
      Events:
        Health:
          Type: Api
          Properties:
            RestApiId: !Ref VokabApi
            Path: /health
            Method: GET
            #Over ride default. Make the endpoint accessible without Authorization
            Auth:
              Authorizer: NONE
        Vokab: # essentially a second health endpoint
          Type: Api
          Properties:
            RestApiId: !Ref VokabApi
            Path: /vokab
            Method: GET
            #Over ride default. Make the endpoint accessible without Authorization
            Auth:
              Authorizer: NONE
        ProxyAny:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref VokabApi
            Path: /{proxy+}
            Method: ANY # Any HTTP method



  DynamoDBAliasTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: alias
          AttributeType: S
        -
          AttributeName: conceptId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST # Could use Provisioned if throughput becomes predictable
      KeySchema:
        -
          AttributeName: alias
          KeyType: HASH
        -
          AttributeName: conceptId
          KeyType: RANGE
      SSESpecification:
        SSEEnabled: true
      TableName: vokab-alias
      Tags:
        - Key: application_name
          Value: vokab
        - Key: application_type
          Value: pre_clinical
        - Key: environment
          Value: production
        - Key: department
          Value: DEA
        - Key: sponsor
          Value: mschreiber

  DynamoDBConceptTable:
    Type: AWS::DynamoDB::Table
    DependsOn: DynamoDBAliasTable
    Properties:
      AttributeDefinitions:
        -
          AttributeName: uuid
          AttributeType: S
        -
          AttributeName: scheme
          AttributeType: S
        -
          AttributeName: label
          AttributeType: S

      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        -
          IndexName: scheme-label-index
          KeySchema:
            -
              AttributeName: scheme
              KeyType: HASH
            -
              AttributeName: label
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      KeySchema:
        -
          AttributeName: uuid
          KeyType: HASH
      SSESpecification:
        SSEEnabled: true
      TableName: vokab-concept
      Tags:
        - Key: application_name
          Value: vokab
        - Key: application_type
          Value: pre_clinical
        - Key: environment
          Value: production
        - Key: department
          Value: DEA
        - Key: sponsor
          Value: mschreiber

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  VokabApi:
    Description: "API Gateway endpoint URL for Prod stage for Vokab function"
    Value: !Sub "https://${VokabApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/vokab/"
  VokabFunction:
    Description: "Vokab Lambda Function ARN"
    Value: !GetAtt VokabFunction.Arn
  VokabFunctionIamRole:
    Description: "Implicit IAM Role created for Vokab function"
    Value: !GetAtt VokabFunctionRole.Arn
  DynamoDBAliasTable:
    Description: "Vokab Alias Table"
    Value: !GetAtt DynamoDBAliasTable.Arn
  DynamoDBConceptTable:
    Description: "Vokab Concept Table"
    Value: !GetAtt DynamoDBConceptTable.Arn